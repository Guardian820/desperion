//  Generated by desperion protocol_builder

#ifndef d2fstream_quest_step_rewards_hpp
#define d2fstream_quest_step_rewards_hpp

namespace datacenter
{
    struct quest_step_rewards : data_holder
    {
        int32_t id;
        int32_t step_id;
        int32_t level_min;
        int32_t level_max;
        std::vector<uint32_t> items_reward;
        std::vector<uint32_t> emotes_reward;
        std::vector<uint32_t> jobs_reward;
        std::vector<uint32_t> spells_reward;
        
        quest_step_rewards() = default;
        
        quest_step_rewards(const int32_t & id, const int32_t & step_id, const int32_t & level_min, const int32_t & level_max, const std::vector<uint32_t> & items_reward, const std::vector<uint32_t> & emotes_reward, const std::vector<uint32_t> & jobs_reward, const std::vector<uint32_t> & spells_reward) : id { id }, step_id { step_id }, level_min { level_min }, level_max { level_max }, items_reward { items_reward }, emotes_reward { emotes_reward }, jobs_reward { jobs_reward }, spells_reward { spells_reward }
        {
        }
        
        quest_step_rewards(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(step_id, data.second.at("stepId"));
            acquire(level_min, data.second.at("levelMin"));
            acquire(level_max, data.second.at("levelMax"));
            acquire(items_reward, data.second.at("itemsReward"));
            acquire(emotes_reward, data.second.at("emotesReward"));
            acquire(jobs_reward, data.second.at("jobsReward"));
            acquire(spells_reward, data.second.at("spellsReward"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<quest_step_rewards>();
        release(id, data.second["id"], file);
        release(step_id, data.second["stepId"], file);
        release(level_min, data.second["levelMin"], file);
        release(level_max, data.second["levelMax"], file);
        release(items_reward, data.second["itemsReward"], file);
        release(emotes_reward, data.second["emotesReward"], file);
        release(jobs_reward, data.second["jobsReward"], file);
        release(spells_reward, data.second["spellsReward"], file);
        return data;
    }
#endif
}
#endif