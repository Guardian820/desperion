//  Generated by desperion protocol_builder

#ifndef d2fstream_alignment_title_hpp
#define d2fstream_alignment_title_hpp

namespace datacenter
{
    struct alignment_title : data_holder
    {
        int32_t side_id;
        std::vector<int32_t> names_id;
        std::vector<int32_t> shorts_id;
        
        alignment_title() = default;
        
        alignment_title(const int32_t & side_id, const std::vector<int32_t> & names_id, const std::vector<int32_t> & shorts_id) : side_id { side_id }, names_id { names_id }, shorts_id { shorts_id }
        {
        }
        
        alignment_title(data_object && data)
        {
            acquire(side_id, data.second.at("sideId"));
            acquire(names_id, data.second.at("namesId"));
            acquire(shorts_id, data.second.at("shortsId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<alignment_title>();
        release(side_id, data.second["sideId"], file);
        release(names_id, data.second["namesId"], file);
        release(shorts_id, data.second["shortsId"], file);
        return data;
    }
#endif
}
#endif