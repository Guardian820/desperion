//  Generated by desperion protocol_builder

#ifndef d2fstream_alignment_rank_jnt_gift_hpp
#define d2fstream_alignment_rank_jnt_gift_hpp

namespace datacenter
{
    struct alignment_rank_jnt_gift : data_holder
    {
        int32_t id;
        std::vector<int32_t> gifts;
        std::vector<int32_t> parameters;
        std::vector<int32_t> levels;
        
        alignment_rank_jnt_gift() = default;
        
        alignment_rank_jnt_gift(const int32_t & id, const std::vector<int32_t> & gifts, const std::vector<int32_t> & parameters, const std::vector<int32_t> & levels) : id { id }, gifts { gifts }, parameters { parameters }, levels { levels }
        {
        }
        
        alignment_rank_jnt_gift(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(gifts, data.second.at("gifts"));
            acquire(parameters, data.second.at("parameters"));
            acquire(levels, data.second.at("levels"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<alignment_rank_jnt_gift>();
        release(id, data.second["id"], file);
        release(gifts, data.second["gifts"], file);
        release(parameters, data.second["parameters"], file);
        release(levels, data.second["levels"], file);
        return data;
    }
#endif
}
#endif