//  Generated by desperion protocol_builder

#ifndef d2fstream_spell_type_hpp
#define d2fstream_spell_type_hpp

namespace datacenter
{
    struct spell_type : data_holder
    {
        int32_t id;
        int32_t long_name_id;
        int32_t short_name_id;
        
        spell_type() = default;
        
        spell_type(const int32_t & id, const int32_t & long_name_id, const int32_t & short_name_id) : id { id }, long_name_id { long_name_id }, short_name_id { short_name_id }
        {
        }
        
        spell_type(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(long_name_id, data.second.at("longNameId"));
            acquire(short_name_id, data.second.at("shortNameId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<spell_type>();
        release(id, data.second["id"], file);
        release(long_name_id, data.second["longNameId"], file);
        release(short_name_id, data.second["shortNameId"], file);
        return data;
    }
#endif
}
#endif