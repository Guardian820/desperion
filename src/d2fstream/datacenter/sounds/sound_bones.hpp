//  Generated by desperion protocol_builder

#ifndef d2fstream_sound_bones_hpp
#define d2fstream_sound_bones_hpp

namespace datacenter
{
    struct sound_bones : data_holder
    {
        int32_t id;
        std::vector<std::string> keys;
        std::vector<sound_animation> values;
        
        sound_bones() = default;
        
        sound_bones(const int32_t & id, const std::vector<std::string> & keys, const std::vector<sound_animation> & values) : id { id }, keys { keys }, values { values }
        {
        }
        
        sound_bones(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(keys, data.second.at("keys"));
            acquire(values, data.second.at("values"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<sound_bones>();
        release(id, data.second["id"], file);
        release(keys, data.second["keys"], file);
        release(values, data.second["values"], file);
        return data;
    }
#endif
}
#endif