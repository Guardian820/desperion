//  Generated by desperion protocol_builder

#ifndef d2fstream_title_hpp
#define d2fstream_title_hpp

namespace datacenter
{
    struct title : data_holder
    {
        int32_t id;
        int32_t name_male_id;
        int32_t name_female_id;
        bool visible;
        int32_t category_id;
        
        title() = default;
        
        title(const int32_t & id, const int32_t & name_male_id, const int32_t & name_female_id, const bool & visible, const int32_t & category_id) : id { id }, name_male_id { name_male_id }, name_female_id { name_female_id }, visible { visible }, category_id { category_id }
        {
        }
        
        title(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(name_male_id, data.second.at("nameMaleId"));
            acquire(name_female_id, data.second.at("nameFemaleId"));
            acquire(visible, data.second.at("visible"));
            acquire(category_id, data.second.at("categoryId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<title>();
        release(id, data.second["id"], file);
        release(name_male_id, data.second["nameMaleId"], file);
        release(name_female_id, data.second["nameFemaleId"], file);
        release(visible, data.second["visible"], file);
        release(category_id, data.second["categoryId"], file);
        return data;
    }
#endif
}
#endif