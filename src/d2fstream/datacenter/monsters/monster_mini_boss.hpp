//  Generated by desperion protocol_builder

#ifndef d2fstream_monster_mini_boss_hpp
#define d2fstream_monster_mini_boss_hpp

namespace datacenter
{
    struct monster_mini_boss : data_holder
    {
        int32_t id;
        int32_t monster_replacing_id;
        
        monster_mini_boss() = default;
        
        monster_mini_boss(const int32_t & id, const int32_t & monster_replacing_id) : id { id }, monster_replacing_id { monster_replacing_id }
        {
        }
        
        monster_mini_boss(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(monster_replacing_id, data.second.at("monsterReplacingId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<monster_mini_boss>();
        release(id, data.second["id"], file);
        release(monster_replacing_id, data.second["monsterReplacingId"], file);
        return data;
    }
#endif
}
#endif