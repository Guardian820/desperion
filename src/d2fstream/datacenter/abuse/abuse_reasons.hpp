//  Generated by desperion protocol_builder

#ifndef d2fstream_abuse_reasons_hpp
#define d2fstream_abuse_reasons_hpp

namespace datacenter
{
    struct abuse_reasons : data_holder
    {
        int32_t _abuse_reason_id;
        int32_t _mask;
        int32_t _reason_text_id;
        
        abuse_reasons() = default;
        
        abuse_reasons(const int32_t & _abuse_reason_id, const int32_t & _mask, const int32_t & _reason_text_id) : _abuse_reason_id { _abuse_reason_id }, _mask { _mask }, _reason_text_id { _reason_text_id }
        {
        }
        
        abuse_reasons(data_object && data)
        {
            acquire(_abuse_reason_id, data.second.at("_abuseReasonId"));
            acquire(_mask, data.second.at("_mask"));
            acquire(_reason_text_id, data.second.at("_reasonTextId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<abuse_reasons>();
        release(_abuse_reason_id, data.second["_abuseReasonId"], file);
        release(_mask, data.second["_mask"], file);
        release(_reason_text_id, data.second["_reasonTextId"], file);
        return data;
    }
#endif
}
#endif