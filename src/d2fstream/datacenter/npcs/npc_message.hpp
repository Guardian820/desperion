//  Generated by desperion protocol_builder

#ifndef d2fstream_npc_message_hpp
#define d2fstream_npc_message_hpp

namespace datacenter
{
    struct npc_message : data_holder
    {
        int32_t id;
        int32_t message_id;
        std::string message_params;
        
        npc_message() = default;
        
        npc_message(const int32_t & id, const int32_t & message_id, const std::string & message_params) : id { id }, message_id { message_id }, message_params { message_params }
        {
        }
        
        npc_message(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(message_id, data.second.at("messageId"));
            acquire(message_params, data.second.at("messageParams"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<npc_message>();
        release(id, data.second["id"], file);
        release(message_id, data.second["messageId"], file);
        release(message_params, data.second["messageParams"], file);
        return data;
    }
#endif
}
#endif