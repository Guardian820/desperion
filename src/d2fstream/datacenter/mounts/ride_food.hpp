//  Generated by desperion protocol_builder

#ifndef d2fstream_ride_food_hpp
#define d2fstream_ride_food_hpp

namespace datacenter
{
    struct ride_food : data_holder
    {
        int32_t gid;
        int32_t type_id;
        
        ride_food() = default;
        
        ride_food(const int32_t & gid, const int32_t & type_id) : gid { gid }, type_id { type_id }
        {
        }
        
        ride_food(data_object && data)
        {
            acquire(gid, data.second.at("gid"));
            acquire(type_id, data.second.at("typeId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<ride_food>();
        release(gid, data.second["gid"], file);
        release(type_id, data.second["typeId"], file);
        return data;
    }
#endif
}
#endif