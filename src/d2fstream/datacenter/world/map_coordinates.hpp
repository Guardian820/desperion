//  Generated by desperion protocol_builder

#ifndef d2fstream_map_coordinates_hpp
#define d2fstream_map_coordinates_hpp

namespace datacenter
{
    struct map_coordinates : data_holder
    {
        int32_t compressed_coords;
        std::vector<int32_t> map_ids;
        
        map_coordinates() = default;
        
        map_coordinates(const int32_t & compressed_coords, const std::vector<int32_t> & map_ids) : compressed_coords { compressed_coords }, map_ids { map_ids }
        {
        }
        
        map_coordinates(data_object && data)
        {
            acquire(compressed_coords, data.second.at("compressedCoords"));
            acquire(map_ids, data.second.at("mapIds"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<map_coordinates>();
        release(compressed_coords, data.second["compressedCoords"], file);
        release(map_ids, data.second["mapIds"], file);
        return data;
    }
#endif
}
#endif