//  Generated by desperion protocol_builder

#ifndef d2fstream_hint_hpp
#define d2fstream_hint_hpp

namespace datacenter
{
    struct hint : data_holder
    {
        int32_t id;
        int32_t category_id;
        int32_t gfx;
        int32_t name_id;
        int32_t map_id;
        int32_t real_map_id;
        int32_t x;
        int32_t y;
        bool outdoor;
        int32_t subarea_id;
        
        hint() = default;
        
        hint(const int32_t & id, const int32_t & category_id, const int32_t & gfx, const int32_t & name_id, const int32_t & map_id, const int32_t & real_map_id, const int32_t & x, const int32_t & y, const bool & outdoor, const int32_t & subarea_id) : id { id }, category_id { category_id }, gfx { gfx }, name_id { name_id }, map_id { map_id }, real_map_id { real_map_id }, x { x }, y { y }, outdoor { outdoor }, subarea_id { subarea_id }
        {
        }
        
        hint(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(category_id, data.second.at("categoryId"));
            acquire(gfx, data.second.at("gfx"));
            acquire(name_id, data.second.at("nameId"));
            acquire(map_id, data.second.at("mapId"));
            acquire(real_map_id, data.second.at("realMapId"));
            acquire(x, data.second.at("x"));
            acquire(y, data.second.at("y"));
            acquire(outdoor, data.second.at("outdoor"));
            acquire(subarea_id, data.second.at("subareaId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<hint>();
        release(id, data.second["id"], file);
        release(category_id, data.second["categoryId"], file);
        release(gfx, data.second["gfx"], file);
        release(name_id, data.second["nameId"], file);
        release(map_id, data.second["mapId"], file);
        release(real_map_id, data.second["realMapId"], file);
        release(x, data.second["x"], file);
        release(y, data.second["y"], file);
        release(outdoor, data.second["outdoor"], file);
        release(subarea_id, data.second["subareaId"], file);
        return data;
    }
#endif
}
#endif