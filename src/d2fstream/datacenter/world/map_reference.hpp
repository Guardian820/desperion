//  Generated by desperion protocol_builder

#ifndef d2fstream_map_reference_hpp
#define d2fstream_map_reference_hpp

namespace datacenter
{
    struct map_reference : data_holder
    {
        int32_t id;
        int32_t map_id;
        int32_t cell_id;
        
        map_reference() = default;
        
        map_reference(const int32_t & id, const int32_t & map_id, const int32_t & cell_id) : id { id }, map_id { map_id }, cell_id { cell_id }
        {
        }
        
        map_reference(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(map_id, data.second.at("mapId"));
            acquire(cell_id, data.second.at("cellId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<map_reference>();
        release(id, data.second["id"], file);
        release(map_id, data.second["mapId"], file);
        release(cell_id, data.second["cellId"], file);
        return data;
    }
#endif
}
#endif