//  Generated by desperion protocol_builder

#ifndef d2fstream_interactive_hpp
#define d2fstream_interactive_hpp

namespace datacenter
{
    struct interactive : data_holder
    {
        int32_t id;
        int32_t name_id;
        int32_t action_id;
        bool display_tooltip;
        
        interactive() = default;
        
        interactive(const int32_t & id, const int32_t & name_id, const int32_t & action_id, const bool & display_tooltip) : id { id }, name_id { name_id }, action_id { action_id }, display_tooltip { display_tooltip }
        {
        }
        
        interactive(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(name_id, data.second.at("nameId"));
            acquire(action_id, data.second.at("actionId"));
            acquire(display_tooltip, data.second.at("displayTooltip"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<interactive>();
        release(id, data.second["id"], file);
        release(name_id, data.second["nameId"], file);
        release(action_id, data.second["actionId"], file);
        release(display_tooltip, data.second["displayTooltip"], file);
        return data;
    }
#endif
}
#endif