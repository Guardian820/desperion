//  Generated by desperion protocol_builder

#ifndef d2fstream_server_hpp
#define d2fstream_server_hpp

namespace datacenter
{
    struct server : data_holder
    {
        int32_t id;
        int32_t name_id;
        int32_t comment_id;
        double opening_date;
        std::string language;
        int32_t population_id;
        int32_t game_type_id;
        int32_t community_id;
        std::vector<std::string> restricted_to_languages;
        
        server() = default;
        
        server(const int32_t & id, const int32_t & name_id, const int32_t & comment_id, const double & opening_date, const std::string & language, const int32_t & population_id, const int32_t & game_type_id, const int32_t & community_id, const std::vector<std::string> & restricted_to_languages) : id { id }, name_id { name_id }, comment_id { comment_id }, opening_date { opening_date }, language { language }, population_id { population_id }, game_type_id { game_type_id }, community_id { community_id }, restricted_to_languages { restricted_to_languages }
        {
        }
        
        server(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(name_id, data.second.at("nameId"));
            acquire(comment_id, data.second.at("commentId"));
            acquire(opening_date, data.second.at("openingDate"));
            acquire(language, data.second.at("language"));
            acquire(population_id, data.second.at("populationId"));
            acquire(game_type_id, data.second.at("gameTypeId"));
            acquire(community_id, data.second.at("communityId"));
            acquire(restricted_to_languages, data.second.at("restrictedToLanguages"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<server>();
        release(id, data.second["id"], file);
        release(name_id, data.second["nameId"], file);
        release(comment_id, data.second["commentId"], file);
        release(opening_date, data.second["openingDate"], file);
        release(language, data.second["language"], file);
        release(population_id, data.second["populationId"], file);
        release(game_type_id, data.second["gameTypeId"], file);
        release(community_id, data.second["communityId"], file);
        release(restricted_to_languages, data.second["restrictedToLanguages"], file);
        return data;
    }
#endif
}
#endif