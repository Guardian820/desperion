//  Generated by desperion protocol_builder

#ifndef d2fstream_type_action_hpp
#define d2fstream_type_action_hpp

namespace datacenter
{
    struct type_action : data_holder
    {
        int32_t id;
        std::string element_name;
        int32_t element_id;
        
        type_action() = default;
        
        type_action(const int32_t & id, const std::string & element_name, const int32_t & element_id) : id { id }, element_name { element_name }, element_id { element_id }
        {
        }
        
        type_action(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(element_name, data.second.at("elementName"));
            acquire(element_id, data.second.at("elementId"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<type_action>();
        release(id, data.second["id"], file);
        release(element_name, data.second["elementName"], file);
        release(element_id, data.second["elementId"], file);
        return data;
    }
#endif
}
#endif