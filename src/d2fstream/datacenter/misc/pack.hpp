//  Generated by desperion protocol_builder

#ifndef d2fstream_pack_hpp
#define d2fstream_pack_hpp

namespace datacenter
{
    struct pack : data_holder
    {
        int32_t id;
        std::string name;
        bool has_sub_areas;
        
        pack() = default;
        
        pack(const int32_t & id, const std::string & name, const bool & has_sub_areas) : id { id }, name { name }, has_sub_areas { has_sub_areas }
        {
        }
        
        pack(data_object && data)
        {
            acquire(id, data.second.at("id"));
            acquire(name, data.second.at("name"));
            acquire(has_sub_areas, data.second.at("hasSubAreas"));
        }
        
        data_object to_d2o(const d2o_writer &);
    };

#ifdef d2fstream_d2o_writer_hpp
    data_object to_d2o(const d2o_writer & file)
    {
        data_object data;
        data.first = file.get_class_id_for_type<pack>();
        release(id, data.second["id"], file);
        release(name, data.second["name"], file);
        release(has_sub_areas, data.second["hasSubAreas"], file);
        return data;
    }
#endif
}
#endif