//
//  enum_file.cpp
//  protocol_builder
//
//  Created by Alexandre Martin on 06/08/13.
//  Copyright (c) 2013-2014 scalexm. All rights reserved.
//

#include "enum_file.hpp"
#include "output_helper.hpp"
#include <regex>

void enum_file::parse()
{
    std::istringstream ss { _content };
    std::string line;
    while (std::getline(ss, line))
    {
        const std::regex pattern { R"(public static const (\w+):u?int = (\d+);)" };
        std::smatch result;
        if (std::regex_search(line, result, pattern))
            _constants.emplace_back(result[1], std::stoi(result[2]));
    }
}

std::string enum_file::cpp_output() const
{
    auto name = to_cpp_case(_class_name);
    output o;
    o << "//  Generated by desperion protocol_builder";
    o.next().next() << "#ifndef core_" << name << "_hpp";
    o.next() << "#define core_" << name << "_hpp";
    o.next().next() << "namespace network";
    o.next() << "{";
    o.indent().next() << "enum " << name.substr(0, name.size() - 5);
    o.next() << "{";
    o.indent();
    for (auto && c : _constants)
        o.next() << c.name() << " = " << c.value() << ",";
    o.unindent().next() << "};";
    o.unindent().next() << "}";
    o.next().next() << "#endif";
    return o.next().str();
}