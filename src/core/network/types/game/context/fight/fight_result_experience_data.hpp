//  Generated by desperion protocol_builder

#ifndef core_fight_result_experience_data_hpp
#define core_fight_result_experience_data_hpp

namespace network
{
    struct fight_result_experience_data : fight_result_additional_data
    {
        bool show_experience;
        bool show_experience_level_floor;
        bool show_experience_next_level_floor;
        bool show_experience_fight_delta;
        bool show_experience_for_guild;
        bool show_experience_for_mount;
        bool is_incarnation_experience;
        double experience;
        double experience_level_floor;
        double experience_next_level_floor;
        int32_t experience_fight_delta;
        int32_t experience_for_guild;
        int32_t experience_for_mount;
        int32_t reroll_experience_mul;
        
        int16_t id() const override
        { return 192; } 
        
        fight_result_experience_data(const bool & show_experience, const bool & show_experience_level_floor, const bool & show_experience_next_level_floor, const bool & show_experience_fight_delta, const bool & show_experience_for_guild, const bool & show_experience_for_mount, const bool & is_incarnation_experience, const double & experience, const double & experience_level_floor, const double & experience_next_level_floor, const int32_t & experience_fight_delta, const int32_t & experience_for_guild, const int32_t & experience_for_mount, const int32_t & reroll_experience_mul)
        {
            int8_t flag = 0;
            set_bool_flag(flag, 0, show_experience);
            set_bool_flag(flag, 1, show_experience_level_floor);
            set_bool_flag(flag, 2, show_experience_next_level_floor);
            set_bool_flag(flag, 3, show_experience_fight_delta);
            set_bool_flag(flag, 4, show_experience_for_guild);
            set_bool_flag(flag, 5, show_experience_for_mount);
            set_bool_flag(flag, 6, is_incarnation_experience);
            _data << flag;
            _data << experience;
            _data << experience_level_floor;
            _data << experience_next_level_floor;
            _data << experience_fight_delta;
            _data << experience_for_guild;
            _data << experience_for_mount;
            _data << reroll_experience_mul;
        }
        
        fight_result_experience_data(byte_buffer & data) : fight_result_additional_data { data }
        {
            int8_t flag;
            data >> flag;
            show_experience = get_bool_flag(flag, 0);
            show_experience_level_floor = get_bool_flag(flag, 1);
            show_experience_next_level_floor = get_bool_flag(flag, 2);
            show_experience_fight_delta = get_bool_flag(flag, 3);
            show_experience_for_guild = get_bool_flag(flag, 4);
            show_experience_for_mount = get_bool_flag(flag, 5);
            is_incarnation_experience = get_bool_flag(flag, 6);
            data >> experience;
            data >> experience_level_floor;
            data >> experience_next_level_floor;
            data >> experience_fight_delta;
            data >> experience_for_guild;
            data >> experience_for_mount;
            data >> reroll_experience_mul;
        }
    };
    
    using fight_result_experience_data_ptr = std::unique_ptr<fight_result_experience_data>;
}

#endif
