//  Generated by desperion protocol_builder

#ifndef core_game_fight_minimal_stats_preparation_hpp
#define core_game_fight_minimal_stats_preparation_hpp

namespace network
{
    struct game_fight_minimal_stats_preparation : game_fight_minimal_stats
    {
        int32_t initiative;
        
        int16_t id() const override
        { return 360; } 
        
        game_fight_minimal_stats_preparation(const int32_t & life_points, const int32_t & max_life_points, const int32_t & base_max_life_points, const int32_t & permanent_damage_percent, const int32_t & shield_points, const int16_t & action_points, const int16_t & max_action_points, const int16_t & movement_points, const int16_t & max_movement_points, const int32_t & summoner, const bool & summoned, const int16_t & neutral_element_resist_percent, const int16_t & earth_element_resist_percent, const int16_t & water_element_resist_percent, const int16_t & air_element_resist_percent, const int16_t & fire_element_resist_percent, const int16_t & neutral_element_reduction, const int16_t & earth_element_reduction, const int16_t & water_element_reduction, const int16_t & air_element_reduction, const int16_t & fire_element_reduction, const int16_t & critical_damage_fixed_resist, const int16_t & push_damage_fixed_resist, const int16_t & dodge_p_a_lost_probability, const int16_t & dodge_p_m_lost_probability, const int16_t & tackle_block, const int16_t & tackle_evade, const int8_t & invisibility_state, const int32_t & initiative) : game_fight_minimal_stats { life_points,max_life_points,base_max_life_points,permanent_damage_percent,shield_points,action_points,max_action_points,movement_points,max_movement_points,summoner,summoned,neutral_element_resist_percent,earth_element_resist_percent,water_element_resist_percent,air_element_resist_percent,fire_element_resist_percent,neutral_element_reduction,earth_element_reduction,water_element_reduction,air_element_reduction,fire_element_reduction,critical_damage_fixed_resist,push_damage_fixed_resist,dodge_p_a_lost_probability,dodge_p_m_lost_probability,tackle_block,tackle_evade,invisibility_state }
        {
            _data << initiative;
        }
        
        game_fight_minimal_stats_preparation(byte_buffer & data) : game_fight_minimal_stats { data }
        {
            data >> initiative;
        }
    };
    
    using game_fight_minimal_stats_preparation_ptr = std::unique_ptr<game_fight_minimal_stats_preparation>;
}

#endif
