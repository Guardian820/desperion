//  Generated by desperion protocol_builder

#ifndef core_party_guest_informations_hpp
#define core_party_guest_informations_hpp

namespace network
{
    struct party_guest_informations : dofus_unit
    {
        int32_t guest_id;
        int32_t host_id;
        std::string name;
        entity_look_ptr guest_look;
        int8_t breed;
        bool sex;
        player_status_ptr status;
        
        int16_t id() const override
        { return 374; } 
        
        party_guest_informations(const int32_t & guest_id, const int32_t & host_id, const std::string & name, const entity_look_ptr & guest_look, const int8_t & breed, const bool & sex, const player_status_ptr & status)
        {
            _data << guest_id;
            _data << host_id;
            _data << name;
            _data << guest_look->buffer();
            _data << breed;
            _data << sex;
            _data << status->id() << status->buffer();
        }
        
        party_guest_informations(byte_buffer & data)
        {
            data >> guest_id;
            data >> host_id;
            data >> name;
            guest_look = std::make_unique<entity_look>(data);
            data >> breed;
            data >> sex;
            int16_t status_id;
            data >> status_id;
            status.reset(type_manager::get_player_status(status_id, data));
        }
    };
    
    using party_guest_informations_ptr = std::unique_ptr<party_guest_informations>;
}

#endif
