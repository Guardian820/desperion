//  Generated by desperion protocol_builder

#ifndef core_tax_collector_loot_informations_hpp
#define core_tax_collector_loot_informations_hpp

namespace network
{
    struct tax_collector_loot_informations : tax_collector_complementary_informations
    {
        int32_t kamas;
        double experience;
        int32_t pods;
        int32_t items_value;
        
        int16_t id() const override
        { return 372; } 
        
        tax_collector_loot_informations(const int32_t & kamas, const double & experience, const int32_t & pods, const int32_t & items_value)
        {
            _data << kamas;
            _data << experience;
            _data << pods;
            _data << items_value;
        }
        
        tax_collector_loot_informations(byte_buffer & data) : tax_collector_complementary_informations { data }
        {
            data >> kamas;
            data >> experience;
            data >> pods;
            data >> items_value;
        }
    };
    
    using tax_collector_loot_informations_ptr = std::unique_ptr<tax_collector_loot_informations>;
}

#endif
