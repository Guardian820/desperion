//  Generated by desperion protocol_builder

#ifndef core_guild_facts_message_hpp
#define core_guild_facts_message_hpp

namespace network
{
    struct guild_facts_message : dofus_unit
    {
        guild_fact_sheet_informations_ptr infos;
        int32_t creation_date;
        int16_t nb_tax_collectors;
        bool enabled;
        std::vector<character_minimal_informations_ptr> members;
        
        int16_t id() const override
        { return 6415; } 
        
        guild_facts_message(const guild_fact_sheet_informations_ptr & infos, const int32_t & creation_date, const int16_t & nb_tax_collectors, const bool & enabled, const std::vector<character_minimal_informations_ptr> & members)
        {
            _data << infos->id() << infos->buffer();
            _data << creation_date;
            _data << nb_tax_collectors;
            _data << enabled;
            _data << static_cast<int16_t>(members.size());
            for (auto && i : members)
                _data << i->buffer();
        }
        
        guild_facts_message(byte_buffer & data)
        {
            int16_t infos_id;
            data >> infos_id;
            infos.reset(type_manager::get_guild_fact_sheet_informations(infos_id, data));
            data >> creation_date;
            data >> nb_tax_collectors;
            data >> enabled;
            int16_t members_size;
            data >> members_size;
            members.resize(members_size);
            for (int16_t i = 0; i < members_size; ++i)
                members[i] = std::make_unique<character_minimal_informations>(data);
        }
    };
}

#endif
