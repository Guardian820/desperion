//  Generated by desperion protocol_builder

#ifndef core_game_action_mark_hpp
#define core_game_action_mark_hpp

namespace network
{
    struct game_action_mark : dofus_unit
    {
        int32_t mark_author_id;
        int32_t mark_spell_id;
        int16_t mark_id;
        int8_t mark_type;
        std::vector<game_action_marked_cell_ptr> cells;
        
        int16_t id() const override
        { return 351; } 
        
        game_action_mark(const int32_t & mark_author_id, const int32_t & mark_spell_id, const int16_t & mark_id, const int8_t & mark_type, const std::vector<game_action_marked_cell_ptr> & cells)
        {
            _data << mark_author_id;
            _data << mark_spell_id;
            _data << mark_id;
            _data << mark_type;
            _data << static_cast<int16_t>(cells.size());
            for (auto && i : cells)
                _data << i->buffer();
        }
        
        game_action_mark(byte_buffer & data)
        {
            data >> mark_author_id;
            data >> mark_spell_id;
            data >> mark_id;
            data >> mark_type;
            int16_t cells_size;
            data >> cells_size;
            cells.resize(cells_size);
            for (int16_t i = 0; i < cells_size; ++i)
                cells[i] = std::make_unique<game_action_marked_cell>(data);
        }
    };
    
    using game_action_mark_ptr = std::unique_ptr<game_action_mark>;
}

#endif
