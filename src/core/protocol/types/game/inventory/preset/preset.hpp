//  Generated by desperion protocol_builder

#ifndef core_preset_hpp
#define core_preset_hpp

namespace protocol
{
    struct preset : dofus_unit
    {
        int8_t preset_id;
        int8_t symbol_id;
        bool mount;
        std::vector<preset_item_ptr> objects;
        
        int16_t id() const override
        { return 355; } 
        
        preset(const int8_t & preset_id, const int8_t & symbol_id, const bool & mount, const std::vector<preset_item_ptr> & objects)
        {
            _data << preset_id;
            _data << symbol_id;
            _data << mount;
            _data << static_cast<int16_t>(objects.size());
            for (auto && i : objects)
                _data << i->buffer();
        }
        
        preset(byte_buffer & data)
        {
            data >> preset_id;
            data >> symbol_id;
            data >> mount;
            int16_t objects_size;
            data >> objects_size;
            objects.resize(objects_size);
            for (int16_t i = 0; i < objects_size; ++i)
                objects[i] = std::make_unique<preset_item>(data);
        }
    };
    
    using preset_ptr = std::unique_ptr<preset>;
}

#endif
