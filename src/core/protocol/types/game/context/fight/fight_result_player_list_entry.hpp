//  Generated by desperion protocol_builder

#ifndef core_fight_result_player_list_entry_hpp
#define core_fight_result_player_list_entry_hpp

namespace protocol
{
    struct fight_result_player_list_entry : fight_result_fighter_list_entry
    {
        int8_t level;
        std::vector<fight_result_additional_data_ptr> additional;
        
        int16_t id() const override
        { return 24; } 
        
        fight_result_player_list_entry(const int32_t & id, const bool & alive, const int16_t & outcome, const fight_loot_ptr & rewards, const int8_t & level, const std::vector<fight_result_additional_data_ptr> & additional) : fight_result_fighter_list_entry { id,alive,outcome,rewards }
        {
            _data << level;
            _data << static_cast<int16_t>(additional.size());
            for (auto && i : additional)
                _data << i->id() << i->buffer();
        }
        
        fight_result_player_list_entry(byte_buffer & data) : fight_result_fighter_list_entry { data }
        {
            data >> level;
            int16_t additional_size;
            data >> additional_size;
            additional.resize(additional_size);
            for (int16_t i = 0; i < additional_size; ++i)
            {
                int16_t p;
                data >> p;
                additional[i].reset(type_manager::get_fight_result_additional_data(p, data));
            }
        }
    };
    
    using fight_result_player_list_entry_ptr = std::unique_ptr<fight_result_player_list_entry>;
}

#endif
