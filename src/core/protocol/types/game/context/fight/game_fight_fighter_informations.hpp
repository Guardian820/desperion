//  Generated by desperion protocol_builder

#ifndef core_game_fight_fighter_informations_hpp
#define core_game_fight_fighter_informations_hpp

namespace protocol
{
    struct game_fight_fighter_informations : game_context_actor_informations
    {
        int8_t team_id;
        bool alive;
        game_fight_minimal_stats_ptr stats;
        
        int16_t id() const override
        { return 143; } 
        
        game_fight_fighter_informations(const int32_t & contextual_id, const entity_look_ptr & look, const entity_disposition_informations_ptr & disposition, const int8_t & team_id, const bool & alive, const game_fight_minimal_stats_ptr & stats) : game_context_actor_informations { contextual_id,look,disposition }
        {
            _data << team_id;
            _data << alive;
            _data << stats->id() << stats->buffer();
        }
        
        game_fight_fighter_informations(byte_buffer & data) : game_context_actor_informations { data }
        {
            data >> team_id;
            data >> alive;
            int16_t stats_id;
            data >> stats_id;
            stats.reset(type_manager::get_game_fight_minimal_stats(stats_id, data));
        }
    };
    
    using game_fight_fighter_informations_ptr = std::unique_ptr<game_fight_fighter_informations>;
}

#endif
