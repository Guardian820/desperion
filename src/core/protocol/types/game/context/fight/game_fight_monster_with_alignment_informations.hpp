//  Generated by desperion protocol_builder

#ifndef core_game_fight_monster_with_alignment_informations_hpp
#define core_game_fight_monster_with_alignment_informations_hpp

namespace network
{
    struct game_fight_monster_with_alignment_informations : game_fight_monster_informations
    {
        actor_alignment_informations_ptr alignment_infos;
        
        int16_t id() const override
        { return 203; } 
        
        game_fight_monster_with_alignment_informations(const int16_t & creature_generic_id, const int8_t & creature_grade, const int8_t & team_id, const bool & alive, const game_fight_minimal_stats_ptr & stats, const int32_t & contextual_id, const entity_look_ptr & look, const entity_disposition_informations_ptr & disposition, const actor_alignment_informations_ptr & alignment_infos) : game_fight_monster_informations { creature_generic_id,creature_grade,team_id,alive,stats,contextual_id,look,disposition }
        {
            _data << alignment_infos->buffer();
        }
        
        game_fight_monster_with_alignment_informations(byte_buffer & data) : game_fight_monster_informations { data }
        {
            alignment_infos = std::make_unique<actor_alignment_informations>(data);
        }
    };
    
    using game_fight_monster_with_alignment_informations_ptr = std::unique_ptr<game_fight_monster_with_alignment_informations>;
}

#endif
