//  Generated by desperion protocol_builder

#ifndef core_game_fight_resume_slave_info_hpp
#define core_game_fight_resume_slave_info_hpp

namespace protocol
{
    struct game_fight_resume_slave_info : dofus_unit
    {
        int32_t slave_id;
        std::vector<game_fight_spell_cooldown_ptr> spell_cooldowns;
        int8_t summon_count;
        int8_t bomb_count;
        
        int16_t id() const override
        { return 364; } 
        
        game_fight_resume_slave_info(const int32_t & slave_id, const std::vector<game_fight_spell_cooldown_ptr> & spell_cooldowns, const int8_t & summon_count, const int8_t & bomb_count)
        {
            _data << slave_id;
            _data << static_cast<int16_t>(spell_cooldowns.size());
            for (auto && i : spell_cooldowns)
                _data << i->buffer();
            _data << summon_count;
            _data << bomb_count;
        }
        
        game_fight_resume_slave_info(byte_buffer & data)
        {
            data >> slave_id;
            int16_t spell_cooldowns_size;
            data >> spell_cooldowns_size;
            spell_cooldowns.resize(spell_cooldowns_size);
            for (int16_t i = 0; i < spell_cooldowns_size; ++i)
                spell_cooldowns[i] = std::make_unique<game_fight_spell_cooldown>(data);
            data >> summon_count;
            data >> bomb_count;
        }
    };
    
    using game_fight_resume_slave_info_ptr = std::unique_ptr<game_fight_resume_slave_info>;
}

#endif
