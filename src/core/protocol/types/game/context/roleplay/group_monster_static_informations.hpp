//  Generated by desperion protocol_builder

#ifndef core_group_monster_static_informations_hpp
#define core_group_monster_static_informations_hpp

namespace protocol
{
    struct group_monster_static_informations : dofus_unit
    {
        monster_in_group_light_informations_ptr main_creature_light_infos;
        std::vector<monster_in_group_informations_ptr> underlings;
        
        int16_t id() const override
        { return 140; } 
        
        group_monster_static_informations(const monster_in_group_light_informations_ptr & main_creature_light_infos, const std::vector<monster_in_group_informations_ptr> & underlings)
        {
            _data << main_creature_light_infos->buffer();
            _data << static_cast<int16_t>(underlings.size());
            for (auto && i : underlings)
                _data << i->buffer();
        }
        
        group_monster_static_informations(byte_buffer & data)
        {
            main_creature_light_infos = std::make_unique<monster_in_group_light_informations>(data);
            int16_t underlings_size;
            data >> underlings_size;
            underlings.resize(underlings_size);
            for (int16_t i = 0; i < underlings_size; ++i)
                underlings[i] = std::make_unique<monster_in_group_informations>(data);
        }
    };
    
    using group_monster_static_informations_ptr = std::unique_ptr<group_monster_static_informations>;
}

#endif
