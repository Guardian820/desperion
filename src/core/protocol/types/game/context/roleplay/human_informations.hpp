//  Generated by desperion protocol_builder

#ifndef core_human_informations_hpp
#define core_human_informations_hpp

namespace network
{
    struct human_informations : dofus_unit
    {
        actor_restrictions_informations_ptr restrictions;
        bool sex;
        std::vector<human_option_ptr> options;
        
        int16_t id() const override
        { return 157; } 
        
        human_informations(const actor_restrictions_informations_ptr & restrictions, const bool & sex, const std::vector<human_option_ptr> & options)
        {
            _data << restrictions->buffer();
            _data << sex;
            _data << static_cast<int16_t>(options.size());
            for (auto && i : options)
                _data << i->id() << i->buffer();
        }
        
        human_informations(byte_buffer & data)
        {
            restrictions = std::make_unique<actor_restrictions_informations>(data);
            data >> sex;
            int16_t options_size;
            data >> options_size;
            options.resize(options_size);
            for (int16_t i = 0; i < options_size; ++i)
            {
                int16_t p;
                data >> p;
                options[i].reset(type_manager::get_human_option(p, data));
            }
        }
    };
    
    using human_informations_ptr = std::unique_ptr<human_informations>;
}

#endif
