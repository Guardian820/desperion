//  Generated by desperion protocol_builder

#ifndef core_group_monster_static_informations_with_alternatives_hpp
#define core_group_monster_static_informations_with_alternatives_hpp

namespace protocol
{
    struct group_monster_static_informations_with_alternatives : group_monster_static_informations
    {
        std::vector<alternative_monsters_in_group_light_informations_ptr> alternatives;
        
        int16_t id() const override
        { return 396; } 
        
        group_monster_static_informations_with_alternatives(const monster_in_group_light_informations_ptr & main_creature_light_infos, const std::vector<monster_in_group_informations_ptr> & underlings, const std::vector<alternative_monsters_in_group_light_informations_ptr> & alternatives) : group_monster_static_informations { main_creature_light_infos,underlings }
        {
            _data << static_cast<int16_t>(alternatives.size());
            for (auto && i : alternatives)
                _data << i->buffer();
        }
        
        group_monster_static_informations_with_alternatives(byte_buffer & data) : group_monster_static_informations { data }
        {
            int16_t alternatives_size;
            data >> alternatives_size;
            alternatives.resize(alternatives_size);
            for (int16_t i = 0; i < alternatives_size; ++i)
                alternatives[i] = std::make_unique<alternative_monsters_in_group_light_informations>(data);
        }
    };
    
    using group_monster_static_informations_with_alternatives_ptr = std::unique_ptr<group_monster_static_informations_with_alternatives>;
}

#endif
