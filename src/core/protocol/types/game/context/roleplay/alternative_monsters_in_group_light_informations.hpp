//  Generated by desperion protocol_builder

#ifndef core_alternative_monsters_in_group_light_informations_hpp
#define core_alternative_monsters_in_group_light_informations_hpp

namespace network
{
    struct alternative_monsters_in_group_light_informations : dofus_unit
    {
        int32_t player_count;
        std::vector<monster_in_group_light_informations_ptr> monsters;
        
        int16_t id() const override
        { return 394; } 
        
        alternative_monsters_in_group_light_informations(const int32_t & player_count, const std::vector<monster_in_group_light_informations_ptr> & monsters)
        {
            _data << player_count;
            _data << static_cast<int16_t>(monsters.size());
            for (auto && i : monsters)
                _data << i->buffer();
        }
        
        alternative_monsters_in_group_light_informations(byte_buffer & data)
        {
            data >> player_count;
            int16_t monsters_size;
            data >> monsters_size;
            monsters.resize(monsters_size);
            for (int16_t i = 0; i < monsters_size; ++i)
                monsters[i] = std::make_unique<monster_in_group_light_informations>(data);
        }
    };
    
    using alternative_monsters_in_group_light_informations_ptr = std::unique_ptr<alternative_monsters_in_group_light_informations>;
}

#endif
