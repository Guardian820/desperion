//  Generated by desperion protocol_builder

#ifndef core_game_role_play_tax_collector_informations_hpp
#define core_game_role_play_tax_collector_informations_hpp

namespace protocol
{
    struct game_role_play_tax_collector_informations : game_role_play_actor_informations
    {
        tax_collector_static_informations_ptr identification;
        int8_t guild_level;
        int32_t tax_collector_attack;
        
        int16_t id() const override
        { return 148; } 
        
        game_role_play_tax_collector_informations(const int32_t & contextual_id, const entity_look_ptr & look, const entity_disposition_informations_ptr & disposition, const tax_collector_static_informations_ptr & identification, const int8_t & guild_level, const int32_t & tax_collector_attack) : game_role_play_actor_informations { contextual_id,look,disposition }
        {
            _data << identification->id() << identification->buffer();
            _data << guild_level;
            _data << tax_collector_attack;
        }
        
        game_role_play_tax_collector_informations(byte_buffer & data) : game_role_play_actor_informations { data }
        {
            int16_t identification_id;
            data >> identification_id;
            identification.reset(type_manager::get_tax_collector_static_informations(identification_id, data));
            data >> guild_level;
            data >> tax_collector_attack;
        }
    };
    
    using game_role_play_tax_collector_informations_ptr = std::unique_ptr<game_role_play_tax_collector_informations>;
}

#endif
