//  Generated by desperion protocol_builder

#ifndef core_startup_action_add_object_hpp
#define core_startup_action_add_object_hpp

namespace protocol
{
    struct startup_action_add_object : dofus_unit
    {
        int32_t uid;
        std::string title;
        std::string text;
        std::string desc_url;
        std::string picture_url;
        std::vector<object_item_information_with_quantity_ptr> items;
        
        int16_t id() const override
        { return 52; } 
        
        startup_action_add_object(const int32_t & uid, const std::string & title, const std::string & text, const std::string & desc_url, const std::string & picture_url, const std::vector<object_item_information_with_quantity_ptr> & items)
        {
            _data << uid;
            _data << title;
            _data << text;
            _data << desc_url;
            _data << picture_url;
            _data << static_cast<int16_t>(items.size());
            for (auto && i : items)
                _data << i->buffer();
        }
        
        startup_action_add_object(byte_buffer & data)
        {
            data >> uid;
            data >> title;
            data >> text;
            data >> desc_url;
            data >> picture_url;
            int16_t items_size;
            data >> items_size;
            items.resize(items_size);
            for (int16_t i = 0; i < items_size; ++i)
                items[i] = std::make_unique<object_item_information_with_quantity>(data);
        }
    };
    
    using startup_action_add_object_ptr = std::unique_ptr<startup_action_add_object>;
}

#endif
