//  Generated by desperion protocol_builder

#ifndef core_house_informations_hpp
#define core_house_informations_hpp

namespace protocol
{
    struct house_informations : dofus_unit
    {
        bool is_on_sale;
        bool is_sale_locked;
        int32_t house_id;
        std::vector<int32_t> doors_on_map;
        std::string owner_name;
        int16_t model_id;
        
        int16_t id() const override
        { return 111; } 
        
        house_informations(const bool & is_on_sale, const bool & is_sale_locked, const int32_t & house_id, const std::vector<int32_t> & doors_on_map, const std::string & owner_name, const int16_t & model_id)
        {
            int8_t flag = 0;
            set_bool_flag(flag, 0, is_on_sale);
            set_bool_flag(flag, 1, is_sale_locked);
            _data << flag;
            _data << house_id;
            _data << static_cast<int16_t>(doors_on_map.size());
            for (auto && i : doors_on_map)
                _data << i;
            _data << owner_name;
            _data << model_id;
        }
        
        house_informations(byte_buffer & data)
        {
            int8_t flag;
            data >> flag;
            is_on_sale = get_bool_flag(flag, 0);
            is_sale_locked = get_bool_flag(flag, 1);
            data >> house_id;
            int16_t doors_on_map_size;
            data >> doors_on_map_size;
            doors_on_map.resize(doors_on_map_size);
            for (int16_t i = 0; i < doors_on_map_size; ++i)
                data >> doors_on_map[i];
            data >> owner_name;
            data >> model_id;
        }
    };
    
    using house_informations_ptr = std::unique_ptr<house_informations>;
}

#endif
