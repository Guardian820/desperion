//  Generated by desperion protocol_builder

#ifndef core_party_locate_members_message_hpp
#define core_party_locate_members_message_hpp

namespace protocol
{
    struct party_locate_members_message : abstract_party_message
    {
        std::vector<party_member_geo_position_ptr> geopositions;
        
        int16_t id() const override
        { return 5595; } 
        
        party_locate_members_message(const int32_t & party_id, const std::vector<party_member_geo_position_ptr> & geopositions) : abstract_party_message { party_id }
        {
            _data << static_cast<int16_t>(geopositions.size());
            for (auto && i : geopositions)
                _data << i->buffer();
        }
        
        party_locate_members_message(byte_buffer & data) : abstract_party_message { data }
        {
            int16_t geopositions_size;
            data >> geopositions_size;
            geopositions.resize(geopositions_size);
            for (int16_t i = 0; i < geopositions_size; ++i)
                geopositions[i] = std::make_unique<party_member_geo_position>(data);
        }
    };
}

#endif
