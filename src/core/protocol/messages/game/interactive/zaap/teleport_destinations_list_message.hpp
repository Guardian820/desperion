//  Generated by desperion protocol_builder

#ifndef core_teleport_destinations_list_message_hpp
#define core_teleport_destinations_list_message_hpp

namespace protocol
{
    struct teleport_destinations_list_message : dofus_unit
    {
        int8_t teleporter_type;
        std::vector<int32_t> map_ids;
        std::vector<int16_t> sub_area_ids;
        std::vector<int16_t> costs;
        
        int16_t id() const override
        { return 5960; } 
        
        teleport_destinations_list_message(const int8_t & teleporter_type, const std::vector<int32_t> & map_ids, const std::vector<int16_t> & sub_area_ids, const std::vector<int16_t> & costs)
        {
            _data << teleporter_type;
            _data << static_cast<int16_t>(map_ids.size());
            for (auto && i : map_ids)
                _data << i;
            _data << static_cast<int16_t>(sub_area_ids.size());
            for (auto && i : sub_area_ids)
                _data << i;
            _data << static_cast<int16_t>(costs.size());
            for (auto && i : costs)
                _data << i;
        }
        
        teleport_destinations_list_message(byte_buffer & data)
        {
            data >> teleporter_type;
            int16_t map_ids_size;
            data >> map_ids_size;
            map_ids.resize(map_ids_size);
            for (int16_t i = 0; i < map_ids_size; ++i)
                data >> map_ids[i];
            int16_t sub_area_ids_size;
            data >> sub_area_ids_size;
            sub_area_ids.resize(sub_area_ids_size);
            for (int16_t i = 0; i < sub_area_ids_size; ++i)
                data >> sub_area_ids[i];
            int16_t costs_size;
            data >> costs_size;
            costs.resize(costs_size);
            for (int16_t i = 0; i < costs_size; ++i)
                data >> costs[i];
        }
    };
}

#endif
