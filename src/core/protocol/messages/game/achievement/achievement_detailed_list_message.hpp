//  Generated by desperion protocol_builder

#ifndef core_achievement_detailed_list_message_hpp
#define core_achievement_detailed_list_message_hpp

namespace network
{
    struct achievement_detailed_list_message : dofus_unit
    {
        std::vector<achievement_ptr> started_achievements;
        std::vector<achievement_ptr> finished_achievements;
        
        int16_t id() const override
        { return 6358; } 
        
        achievement_detailed_list_message(const std::vector<achievement_ptr> & started_achievements, const std::vector<achievement_ptr> & finished_achievements)
        {
            _data << static_cast<int16_t>(started_achievements.size());
            for (auto && i : started_achievements)
                _data << i->buffer();
            _data << static_cast<int16_t>(finished_achievements.size());
            for (auto && i : finished_achievements)
                _data << i->buffer();
        }
        
        achievement_detailed_list_message(byte_buffer & data)
        {
            int16_t started_achievements_size;
            data >> started_achievements_size;
            started_achievements.resize(started_achievements_size);
            for (int16_t i = 0; i < started_achievements_size; ++i)
                started_achievements[i] = std::make_unique<achievement>(data);
            int16_t finished_achievements_size;
            data >> finished_achievements_size;
            finished_achievements.resize(finished_achievements_size);
            for (int16_t i = 0; i < finished_achievements_size; ++i)
                finished_achievements[i] = std::make_unique<achievement>(data);
        }
    };
}

#endif
