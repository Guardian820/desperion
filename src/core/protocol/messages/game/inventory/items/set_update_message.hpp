//  Generated by desperion protocol_builder

#ifndef core_set_update_message_hpp
#define core_set_update_message_hpp

namespace protocol
{
    struct set_update_message : dofus_unit
    {
        int16_t set_id;
        std::vector<int16_t> set_objects;
        std::vector<object_effect_ptr> set_effects;
        
        int16_t id() const override
        { return 5503; } 
        
        set_update_message(const int16_t & set_id, const std::vector<int16_t> & set_objects, const std::vector<object_effect_ptr> & set_effects)
        {
            _data << set_id;
            _data << static_cast<int16_t>(set_objects.size());
            for (auto && i : set_objects)
                _data << i;
            _data << static_cast<int16_t>(set_effects.size());
            for (auto && i : set_effects)
                _data << i->id() << i->buffer();
        }
        
        set_update_message(byte_buffer & data)
        {
            data >> set_id;
            int16_t set_objects_size;
            data >> set_objects_size;
            set_objects.resize(set_objects_size);
            for (int16_t i = 0; i < set_objects_size; ++i)
                data >> set_objects[i];
            int16_t set_effects_size;
            data >> set_effects_size;
            set_effects.resize(set_effects_size);
            for (int16_t i = 0; i < set_effects_size; ++i)
            {
                int16_t p;
                data >> p;
                set_effects[i].reset(type_manager::get_object_effect(p, data));
            }
        }
    };
}

#endif
