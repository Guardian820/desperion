//  Generated by desperion protocol_builder

#ifndef core_exchange_guild_tax_collector_get_message_hpp
#define core_exchange_guild_tax_collector_get_message_hpp

namespace protocol
{
    struct exchange_guild_tax_collector_get_message : dofus_unit
    {
        std::string collector_name;
        int16_t world_x;
        int16_t world_y;
        int32_t map_id;
        int16_t sub_area_id;
        std::string user_name;
        double experience;
        std::vector<object_item_quantity_ptr> objects_infos;
        
        int16_t id() const override
        { return 5762; } 
        
        exchange_guild_tax_collector_get_message(const std::string & collector_name, const int16_t & world_x, const int16_t & world_y, const int32_t & map_id, const int16_t & sub_area_id, const std::string & user_name, const double & experience, const std::vector<object_item_quantity_ptr> & objects_infos)
        {
            _data << collector_name;
            _data << world_x;
            _data << world_y;
            _data << map_id;
            _data << sub_area_id;
            _data << user_name;
            _data << experience;
            _data << static_cast<int16_t>(objects_infos.size());
            for (auto && i : objects_infos)
                _data << i->buffer();
        }
        
        exchange_guild_tax_collector_get_message(byte_buffer & data)
        {
            data >> collector_name;
            data >> world_x;
            data >> world_y;
            data >> map_id;
            data >> sub_area_id;
            data >> user_name;
            data >> experience;
            int16_t objects_infos_size;
            data >> objects_infos_size;
            objects_infos.resize(objects_infos_size);
            for (int16_t i = 0; i < objects_infos_size; ++i)
                objects_infos[i] = std::make_unique<object_item_quantity>(data);
        }
    };
}

#endif
