//  Generated by desperion protocol_builder

#ifndef core_exchange_bid_house_in_list_added_message_hpp
#define core_exchange_bid_house_in_list_added_message_hpp

namespace protocol
{
    struct exchange_bid_house_in_list_added_message : dofus_unit
    {
        int32_t item_u_i_d;
        int32_t obj_generic_id;
        int16_t power_rate;
        bool over_max;
        std::vector<object_effect_ptr> effects;
        std::vector<int32_t> prices;
        
        int16_t id() const override
        { return 5949; } 
        
        exchange_bid_house_in_list_added_message(const int32_t & item_u_i_d, const int32_t & obj_generic_id, const int16_t & power_rate, const bool & over_max, const std::vector<object_effect_ptr> & effects, const std::vector<int32_t> & prices)
        {
            _data << item_u_i_d;
            _data << obj_generic_id;
            _data << power_rate;
            _data << over_max;
            _data << static_cast<int16_t>(effects.size());
            for (auto && i : effects)
                _data << i->id() << i->buffer();
            _data << static_cast<int16_t>(prices.size());
            for (auto && i : prices)
                _data << i;
        }
        
        exchange_bid_house_in_list_added_message(byte_buffer & data)
        {
            data >> item_u_i_d;
            data >> obj_generic_id;
            data >> power_rate;
            data >> over_max;
            int16_t effects_size;
            data >> effects_size;
            effects.resize(effects_size);
            for (int16_t i = 0; i < effects_size; ++i)
            {
                int16_t p;
                data >> p;
                effects[i].reset(type_manager::get_object_effect(p, data));
            }
            int16_t prices_size;
            data >> prices_size;
            prices.resize(prices_size);
            for (int16_t i = 0; i < prices_size; ++i)
                data >> prices[i];
        }
    };
}

#endif
