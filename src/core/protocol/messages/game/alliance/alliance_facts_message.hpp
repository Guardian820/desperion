//  Generated by desperion protocol_builder

#ifndef core_alliance_facts_message_hpp
#define core_alliance_facts_message_hpp

namespace protocol
{
    struct alliance_facts_message : dofus_unit
    {
        alliance_fact_sheet_informations_ptr infos;
        std::vector<guild_in_alliance_informations_ptr> guilds;
        std::vector<int16_t> controlled_subarea_ids;
        
        int16_t id() const override
        { return 6414; } 
        
        alliance_facts_message(const alliance_fact_sheet_informations_ptr & infos, const std::vector<guild_in_alliance_informations_ptr> & guilds, const std::vector<int16_t> & controlled_subarea_ids)
        {
            _data << infos->id() << infos->buffer();
            _data << static_cast<int16_t>(guilds.size());
            for (auto && i : guilds)
                _data << i->buffer();
            _data << static_cast<int16_t>(controlled_subarea_ids.size());
            for (auto && i : controlled_subarea_ids)
                _data << i;
        }
        
        alliance_facts_message(byte_buffer & data)
        {
            int16_t infos_id;
            data >> infos_id;
            infos.reset(type_manager::get_alliance_fact_sheet_informations(infos_id, data));
            int16_t guilds_size;
            data >> guilds_size;
            guilds.resize(guilds_size);
            for (int16_t i = 0; i < guilds_size; ++i)
                guilds[i] = std::make_unique<guild_in_alliance_informations>(data);
            int16_t controlled_subarea_ids_size;
            data >> controlled_subarea_ids_size;
            controlled_subarea_ids.resize(controlled_subarea_ids_size);
            for (int16_t i = 0; i < controlled_subarea_ids_size; ++i)
                data >> controlled_subarea_ids[i];
        }
    };
}

#endif
