//  Generated by desperion protocol_builder

#ifndef core_alliance_insider_info_message_hpp
#define core_alliance_insider_info_message_hpp

namespace protocol
{
    struct alliance_insider_info_message : dofus_unit
    {
        alliance_fact_sheet_informations_ptr alliance_infos;
        std::vector<guild_insider_fact_sheet_informations_ptr> guilds;
        std::vector<prism_subarea_empty_info_ptr> prisms;
        
        int16_t id() const override
        { return 6403; } 
        
        alliance_insider_info_message(const alliance_fact_sheet_informations_ptr & alliance_infos, const std::vector<guild_insider_fact_sheet_informations_ptr> & guilds, const std::vector<prism_subarea_empty_info_ptr> & prisms)
        {
            _data << alliance_infos->buffer();
            _data << static_cast<int16_t>(guilds.size());
            for (auto && i : guilds)
                _data << i->buffer();
            _data << static_cast<int16_t>(prisms.size());
            for (auto && i : prisms)
                _data << i->id() << i->buffer();
        }
        
        alliance_insider_info_message(byte_buffer & data)
        {
            alliance_infos = std::make_unique<alliance_fact_sheet_informations>(data);
            int16_t guilds_size;
            data >> guilds_size;
            guilds.resize(guilds_size);
            for (int16_t i = 0; i < guilds_size; ++i)
                guilds[i] = std::make_unique<guild_insider_fact_sheet_informations>(data);
            int16_t prisms_size;
            data >> prisms_size;
            prisms.resize(prisms_size);
            for (int16_t i = 0; i < prisms_size; ++i)
            {
                int16_t p;
                data >> p;
                prisms[i].reset(type_manager::get_prism_subarea_empty_info(p, data));
            }
        }
    };
}

#endif
