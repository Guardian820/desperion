//  Generated by desperion protocol_builder

#ifndef core_identification_success_message_hpp
#define core_identification_success_message_hpp

namespace protocol
{
    struct identification_success_message : dofus_unit
    {
        bool has_rights;
        bool was_already_connected;
        std::string login;
        std::string nickname;
        int32_t account_id;
        int8_t community_id;
        std::string secret_question;
        double subscription_end_date;
        double account_creation;
        
        int16_t id() const override
        { return 22; } 
        
        identification_success_message(const bool & has_rights, const bool & was_already_connected, const std::string & login, const std::string & nickname, const int32_t & account_id, const int8_t & community_id, const std::string & secret_question, const double & subscription_end_date, const double & account_creation)
        {
            int8_t flag = 0;
            set_bool_flag(flag, 0, has_rights);
            set_bool_flag(flag, 1, was_already_connected);
            _data << flag;
            _data << login;
            _data << nickname;
            _data << account_id;
            _data << community_id;
            _data << secret_question;
            _data << subscription_end_date;
            _data << account_creation;
        }
        
        identification_success_message(byte_buffer & data)
        {
            int8_t flag;
            data >> flag;
            has_rights = get_bool_flag(flag, 0);
            was_already_connected = get_bool_flag(flag, 1);
            data >> login;
            data >> nickname;
            data >> account_id;
            data >> community_id;
            data >> secret_question;
            data >> subscription_end_date;
            data >> account_creation;
        }
    };
}

#endif
